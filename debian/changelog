git-hierarchy (2.6) release; urgency=low

  * fix -D passing

 -- Michal Maruska <mmaruska@gmail.com>  Fri, 07 Dec 2012 13:35:05 +0100

git-hierarchy (2.5) release; urgency=low

  * shell formatting
  * Fix deleting the base sym-reference.
  * shell safety. 1 step
  * git-delete pass through -D to "git branch".
  * Use git-expand-ref to expand user's name for segment _base_.

 -- Michal Maruska <mmaruska@gmail.com>  Fri, 07 Dec 2012 13:08:02 +0100

git-hierarchy (2.4) release; urgency=low

  * help/usage for git-rebase-poset
  * help for git-dump-poset

 -- Michal Maruska <mmaruska@gmail.com>  Wed, 05 Dec 2012 01:05:27 +0100

git-hierarchy (2.3) release; urgency=low

  * Provide automatic commit message for Sum merges
  * Stop tracing of segment-rebasing & git-sum.
  * git-delete: don't scan heads, they are not symbolic refs.
  * check the segment has been rebased.
  * tool to officially end the failed segment rebasing.
  * When deleting, remove from a sum (if asked -s).

 -- Michal Maruska <mmaruska@gmail.com>  Mon, 03 Dec 2012 16:43:05 +0100

git-hierarchy (2.2) release; urgency=low

  * recreate-sums to upgrade/turn old sums file into symbolic refs
  * Fix: map to SHA via git rev-list, not git show-ref.
  * Fix: spell correctly git-set-start
  * Use dump_ref as the only place to cat(1) the symref file.
  * git-tsort: usage, options, new: invoke draw-tsort-graph when requested.
  * new: git-dump-refs & git-recover-symbolic-refs.
  * fix: use the correct variable
  * when recovering symrefs, maybe clone a remote branch to local one.
  * git-sum: create branch only if modifying definition.
  * git-recover-symbolic-refs:

 -- Michal Maruska <mmaruska@gmail.com>  Mon, 26 Nov 2012 00:37:57 +0100

git-hierarchy (2.1) release; urgency=low

  * New git-set-start:  & use it.
  * Fix: find correctly the next available Index for sums.

 -- Michal Maruska <mmaruska@gmail.com>  Mon, 19 Nov 2012 10:35:47 +0100

git-hierarchy (2.0) release; urgency=low

  * When assigning cmd output to a zsh array parameter, braces are neede.
  * inform about the Graph filename (when left over).

  [ Using symbolic refs for all -- sums ]
  * list_sums: new approach
  * new: git-expand-ref
  * List, dump, reset, delete, add reimplmented.
  * Graph vs new sums: generate the sum-nodes
  * dump_ref function: to expand indirect refs, by just 1 level.
  * Delete sum or its definition.
  * When deleting a ref, check all summands in the new format.
  * git-sum-branches: get the summands the new way.
  * function summands_of to list the (full) components of a sum (simple name).
  * summands_of: dereference the Numbers.
  * is_sum  adapted.
  * obsolete segment_base
  * dump_poset: doc/usage & expand the argument.
  * dump-poset: work with expanded rerfs. But the segments/sums have simple names.
  * drop SUM_DIR
  * adapt git-tsort (to new Sums implementation).
  * format
  * when renaming ... normalize the name.
  * rename the branch itself soon.
  * rename_symbolic_reference
  * rename segment (branch)
  * rename_symbolic_reference: used for sums
  * renaming an addend (of a sum)
  * todo
  * git-delete:  check properly using the new  dump_ref.
  * comment
  * use full ref name (to avoid ambiguity).
  * Hide the complications in   set_symbolic_reference
  * in fact set_symbolic_reference reverse
  * when renaming.. don't bother checking other refs, for now.
  * set_symbolic_reference is common function
  * add_to_sum: fix bug & use the set_symbolic_reference f.
  * fix shell arithmetics
  * fix: local variables in Functions
  * local variables 1
  * segment_base: full ref
  * rename var keep_graph_file
  * fix array assignment
  * fix: grep vs sed
  * fix my understanding of Variables
  * fix in segment_base (stripping /)
  * shell -- necessary?
  * function Local variables!
  * rebase-ref: extract & use the branch name
  * tsort: print the sum ref in full.
  * rebase-segment: correct the full-ref expansion.
  * comments & tracing & refomattig shell variable assignment
  * rename addend .. silently
  * set_symbolic_reference silent
  * rename: point all sym-refs at the renamed branch.
  * Test all steps

 -- Michal Maruska <mmaruska@gmail.com>  Sun, 18 Nov 2012 15:30:52 +0100

git-hierarchy (1.9) release; urgency=low

  * When describing segment, show the commits too.
  * Implement deleting a Sum.
  * is_sum function
  * is_segment function
  * segment_base function
  * list segments by Git call (not filename globbing).
  * new: git-dump-poset to dump a partial graph.
  * git-tsort: don't mix the output with log messages

 -- Michal Maruska <mmaruska@gmail.com>  Tue, 13 Nov 2012 08:56:03 +0100

git-hierarchy (1.8) release; urgency=low

  * git-branch-exists: new global function
  * stop using my (git) abbrevs.
  * drop the (git) tools non-related to "hierarchy"
  * Start some documentation.
  * Delete segments correctly -- Broken
  * Removing Symbolic refs by removing files.
  * Don't list both the bases & starts of segments.
  * Make a test tool.
  * Fix: don't ignore the failure of "git rebase"!

 -- Michal Maruska <mmaruska@gmail.com>  Mon, 12 Nov 2012 02:07:58 +0100

git-hierarchy (1.7) release; urgency=low

  * Segment: finally a way to produce the commit HASH (of Start).
  * Fix describe segment.

 -- Michal Maruska <mmaruska@gmail.com>  Fri, 09 Nov 2012 10:33:21 +0100

git-hierarchy (1.6) release; urgency=low

  * show progress during poset rebasing.
  * git-segment:  symbolic references: test & create them correctly.

 -- Michal Maruska <mmaruska@gmail.com>  Fri, 09 Nov 2012 09:57:14 +0100

git-hierarchy (1.5) release; urgency=low

  * tsort: handle 0 sums/segments in a friendly way.
  * improve Usage info of git-sum.
  * git-sum: create the branche immediately
  * Accept the sha hash as segment "start".
  * fix usage string.
  * git-segment:  implement dropping
  * git-segment  document all the possible Usages.
  * git-sum: document all Usages

  [ Handling symbolic references correctly ]
  * Testing existence
  * git-segment:  don't hurry to files
  * Correctly removing the Symbolic references
  * Use for-each-ref  to check ALL (even packed) references.
  * describe: try to use -- incomplete!
  * after rebasing, update the Symbolic refs correctly.
  * Usage/help for  git-delete

 -- Michal Maruska <mmaruska@gmail.com>  Tue, 06 Nov 2012 15:58:53 +0100

git-hierarchy (1.4) release; urgency=low

  * stop tracing the scripts.
  * Fix git-segment (to not force creating the segment branch).
  * comments & style
  * Bugfix: Zsh can somehow break out of if then ..... fi.  Prevent that.

 -- Michal Maruska <mmaruska@gmail.com>  Thu, 01 Nov 2012 11:37:34 +0100

git-hierarchy (1.3) release; urgency=low

  * When creating the segment branch, start @ the start!
  * rename to git-sum
  * git_top() returns the .git dir.
  * sum: list sums as well.
  * use SUM_DIR to hide the detail. + more GIT_DIR.
  * sumdir in tsort
  * tsort: possibly output the graph (vertices in the top. order)
  * rebase-poset: report the sum/segment which failed during rebase.

 -- Michal Maruska <mmaruska@gmail.com>  Tue, 30 Oct 2012 11:08:53 +0100

git-hierarchy (1.2) release; urgency=low

  * fix  (create the Branch for segment)
  * Common functions in $prefix/share/git-hierarchy/functions.sh
  * Option to show all segments.

 -- Michal Maruska <mmaruska@gmail.com>  Mon, 15 Oct 2012 22:13:46 +0200

git-hierarchy (1.1) release; urgency=low

  * fix debian Conflict
  * don't use (git) abbrevs
  * New, top level (rebasing) tool
  * Fix once again  mktemp --tmpdir
  * optionally keep Graph temp file
  * allow basing on remote heads

 -- Michal Maruska <mmaruska@gmail.com>  Sun, 14 Oct 2012 02:44:23 +0200

git-hierarchy (1.0) release; urgency=low

  * Initial import (from mmc-shell)

 -- Michal Maruska <mmaruska@gmail.com>  Fri, 12 Oct 2012 02:02:04 +0200
