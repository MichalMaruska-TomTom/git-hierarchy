git-hierarchy (3.1~1.gbpe58e73) UNRELEASED; urgency=low

  ** SNAPSHOT build @e58e73b7716629a100a578d8d03e97abdad30b6e **

  * New criterion for up-to-date sum.
  * git-sum-branches: introduce -v option for verbosity.
  * Propagate -d from git-rebase-poset to git-sum-branches (as -v)

 -- Michal Maruska <mmaruska@gmail.com>  Mon, 30 Dec 2013 14:49:02 +0100

git-hierarchy (3.0) release; urgency=low
  * main features: avoid redoing merges for no reason. Quiet operation.
  *                nice display of the graph.
  * git-reset-segment: add getopt & usage
  * git-reset: either Abort or Commit. (should rename to git-finish-segment-rebase)
  * patches: implement "diff" command
  * tsort: draw the "external" bases as such.
  * Comment on using rebase state to record the segment.
  * shell shortcut
  * Check if the merge needs to be redone. Do nothing if it's current.
  * git-sum-branches: comment & clean
  * comments on Octopus merge
  * clean shell
  * declare git-check-sum obsolete
  * git-tsort: quiet unless -d
  * git-rebase-poset: quiet unless -d
  * git-rebase-ref: quiet unless -d
  * git-rebase-segment: inform when starting rebase
  * propagate the -d option
  * test to make git-rebase invoke itself
  * verbosity in git-rebase for the hooks.
  * document recreate-sums

 -- Michal Maruska <mmaruska@gmail.com>  Mon, 23 Dec 2013 13:11:27 +0100

git-hierarchy (2.18) release; urgency=low

  * Tool to patch/follow the core tools
  * git-sum-branches: Don't lose modified work files & index.

 -- Michal Maruska <mmaruska@gmail.com>  Wed, 11 Dec 2013 12:59:26 +0100

git-hierarchy (2.17) release; urgency=low

  * sq: git-segment test: better info on stderr
  * rebase-segment: check argument.
  * Name better a  shell variable
  * Test git-sum existence. And handle expanded ref name.
  * git-segment: handle expanded ref name.
  * git-walk-down: clean up: usage, var names, debug option
  * fixlet -- necessary?
  * git-rebase-poset ... rename the base(s) for minimal segments.
  * git-walk-down: Ensure the graph file is removed on exit.
  * represent the _remote_ branches in the X graph in some way.
  * sum-branches:  improve getopts
  * verbose when re-merging a sum
  * git-rebase-poset: don't invoke git when not necessary!
  * Carry patched files from git-core
  * [git-core] Invoke hook on rebase finished.

 -- Michal Maruska <mmaruska@gmail.com>  Wed, 04 Dec 2013 13:41:59 +0100

git-hierarchy (2.16) release; urgency=low

  * Start to guarantee branch name is interpreted as such (and not as filename or other)
  * segment_age
  * for Emacs
  * git-tsort: pass options to draw-tsort-graph. incomplete (skipped)!
  * segment_lenght
  * Enrich the Graph by colors & information of sums/segments.
  * git-reset-* handle correctly the wrong situation
  * Have a test for reference
  * git-segment: exit with meaningful error msg if segment does not exist
  * rename 2 shell variables (x_branch & summand_branches)
  * Filter the base name better -- not finished! / still in.

 -- Michal Maruska <mmaruska@gmail.com>  Sat, 23 Nov 2013 22:51:01 +0100

git-hierarchy (2.15) release; urgency=low

  * zsh-completion: combine 2

 -- Michal Maruska <mmaruska@gmail.com>  Mon, 16 Sep 2013 15:59:47 +0200

git-hierarchy (2.14.1) release; urgency=low

  * make the suggested shell command stand out (on its own line)
  * Improve format of "Show the lag of ..."

 -- Michal Maruska <mmaruska@gmail.com>  Wed, 11 Sep 2013 15:46:15 +0200

git-hierarchy (2.14) release; urgency=low

  * clean completion
  * new completions
  * git-segment migrate to getopt()
  * document the usage
  * isolate list_segments into a function
  * implement git-segment deleting -d
  * remove old code
  * important comments
  * lines
  * have to call eval, and simplest is to use eval set.
  * less verbosity
  * fix the completion ... not clear yet.
  * fix drop_segment & its use in git-segment
  * trivial completion for git-rebase-poset
  * fix restarting (without updating/rebasing)
  * Show the lag of Start behind Base.

 -- Michal Maruska <mmaruska@gmail.com>  Mon, 02 Sep 2013 14:25:01 +0200

git-hierarchy (2.13) release; urgency=low

  * New tool: git-walk-down a local git-tgraph.
  * New: git-walk-down
  * rebase only less-than part
  * irrelevant
  * git-delete: handle more at a time (on cmdline)

 -- Michal Maruska <mmaruska@gmail.com>  Thu, 28 Mar 2013 10:19:22 +0100

git-hierarchy (2.12.1) release; urgency=low

  * [fix] git-set-start takes the segment name, not the start-ref name.
  * usage for git-rename
  * git-rename: don't try to expand the New name.

 -- Michal Maruska <mmaruska@gmail.com>  Wed, 13 Mar 2013 09:30:38 +0100

git-hierarchy (2.12) release; urgency=low

  * Zsh completion for git-reset-segment & Install _all_ the zsh files
  * provide DOC (description) for the zsh completion files
  * Debian: install Zsh files under vendor (not site-)
  * (git-)Delete from sum automatically by default.
  * comments

 -- Michal Maruska <mmaruska@gmail.com>  Fri, 08 Mar 2013 00:11:12 +0100

git-hierarchy (2.11.1) release; urgency=low

  * [FIX] drop now useless exit()

 -- Michal Maruska <mmaruska@gmail.com>  Mon, 25 Feb 2013 17:54:42 +0100

git-hierarchy (2.11) release; urgency=low

  * expand $0 before calling usage() function. Strange
  * Zsh completion
  * git-segment: "-s" option for Zsh completion.
  * Zsh completion
  * format
  * git-check-sum
  * FIX git-delete for sum.
  * completion: _git-sum
  * _git-delete
  * separate _git-segment-name
  * completion for:  git-delete & git-sum
  * git-set-start: make it a function and change the arg:
  * segment: better shell -- local variables
  * [FIX] invoke set_symbolic_reference with a symbolic ref:
  * git-rename: the new might not exist yet. In some cases the Old one might not exist anymore.
  * describe_segment: takes name as arg.
  * New options -u (update) & -r (restart) to dictate the interpretation of args:
  * start documenting issues (with git)

 -- Michal Maruska <mmaruska@gmail.com>  Mon, 25 Feb 2013 15:26:28 +0100

git-hierarchy (2.10) release; urgency=low

  * Move segment base.
  * drop_segment function
  * separate delete sum & integrate into git-delete

 -- Michal Maruska <mmaruska@gmail.com>  Mon, 04 Feb 2013 10:21:01 +0100

git-hierarchy (2.9) release; urgency=low

  * disable Delete functionality of git-sergment. Use git-delete.
  * Use the official tool to git-expand-ref. Anyway fix my hack (shell pipeline).
  * comments & clean

 -- Michal Maruska <mmaruska@gmail.com>  Wed, 19 Dec 2012 22:55:54 +0100

git-hierarchy (2.8) release; urgency=low

  * extract drop_symbolic_ref
  * reformat (moving function upwards)
  * Fix drop_symbolic_ref ?
  * use drop_symbolic_ref for   git-sum -
  * expand-ref ... in right order
  * dump_ref_without_ref ... read the symbolic ref, and strip off the "ref: "
  * git-sum-branches: merge the real branches -- solve one level of the sum sym-refs.
  * merge using git-merge strategies, not shell loop.
  * list segments with bases
  * Fix:  use the fixed git-expand-ref.
  * sum: add the arguments (even without leading +)
  * Compare (variable value) rather than grep.
  * Drop commented-out code.
  * shell
  * delete: don't search refs which are surely not symbolic.

 -- Michal Maruska <mmaruska@gmail.com>  Mon, 10 Dec 2012 23:29:24 +0100

git-hierarchy (2.7) release; urgency=low

  * shell formatting
  * Fix deleting the base sym-reference.
  * shell safety. 1 step
  * git-delete pass through -D to "git branch".
  * Use git-expand-ref to expand user's name for segment _base_.
  * Fix: options go before the argument!

 -- Michal Maruska <mmaruska@gmail.com>  Fri, 07 Dec 2012 13:48:32 +0100

git-hierarchy (2.4) release; urgency=low

  * help/usage for git-rebase-poset
  * help for git-dump-poset

 -- Michal Maruska <mmaruska@gmail.com>  Wed, 05 Dec 2012 01:05:27 +0100

git-hierarchy (2.3) release; urgency=low

  * Provide automatic commit message for Sum merges
  * Stop tracing of segment-rebasing & git-sum.
  * git-delete: don't scan heads, they are not symbolic refs.
  * check the segment has been rebased.
  * tool to officially end the failed segment rebasing.
  * When deleting, remove from a sum (if asked -s).

 -- Michal Maruska <mmaruska@gmail.com>  Mon, 03 Dec 2012 16:43:05 +0100

git-hierarchy (2.2) release; urgency=low

  * recreate-sums to upgrade/turn old sums file into symbolic refs
  * Fix: map to SHA via git rev-list, not git show-ref.
  * Fix: spell correctly git-set-start
  * Use dump_ref as the only place to cat(1) the symref file.
  * git-tsort: usage, options, new: invoke draw-tsort-graph when requested.
  * new: git-dump-refs & git-recover-symbolic-refs.
  * fix: use the correct variable
  * when recovering symrefs, maybe clone a remote branch to local one.
  * git-sum: create branch only if modifying definition.
  * git-recover-symbolic-refs:

 -- Michal Maruska <mmaruska@gmail.com>  Mon, 26 Nov 2012 00:37:57 +0100

git-hierarchy (2.1) release; urgency=low

  * New git-set-start:  & use it.
  * Fix: find correctly the next available Index for sums.

 -- Michal Maruska <mmaruska@gmail.com>  Mon, 19 Nov 2012 10:35:47 +0100

git-hierarchy (2.0) release; urgency=low

  * When assigning cmd output to a zsh array parameter, braces are neede.
  * inform about the Graph filename (when left over).

  [ Using symbolic refs for all -- sums ]
  * list_sums: new approach
  * new: git-expand-ref
  * List, dump, reset, delete, add reimplmented.
  * Graph vs new sums: generate the sum-nodes
  * dump_ref function: to expand indirect refs, by just 1 level.
  * Delete sum or its definition.
  * When deleting a ref, check all summands in the new format.
  * git-sum-branches: get the summands the new way.
  * function summands_of to list the (full) components of a sum (simple name).
  * summands_of: dereference the Numbers.
  * is_sum  adapted.
  * obsolete segment_base
  * dump_poset: doc/usage & expand the argument.
  * dump-poset: work with expanded rerfs. But the segments/sums have simple names.
  * drop SUM_DIR
  * adapt git-tsort (to new Sums implementation).
  * format
  * when renaming ... normalize the name.
  * rename the branch itself soon.
  * rename_symbolic_reference
  * rename segment (branch)
  * rename_symbolic_reference: used for sums
  * renaming an addend (of a sum)
  * todo
  * git-delete:  check properly using the new  dump_ref.
  * comment
  * use full ref name (to avoid ambiguity).
  * Hide the complications in   set_symbolic_reference
  * in fact set_symbolic_reference reverse
  * when renaming.. don't bother checking other refs, for now.
  * set_symbolic_reference is common function
  * add_to_sum: fix bug & use the set_symbolic_reference f.
  * fix shell arithmetics
  * fix: local variables in Functions
  * local variables 1
  * segment_base: full ref
  * rename var keep_graph_file
  * fix array assignment
  * fix: grep vs sed
  * fix my understanding of Variables
  * fix in segment_base (stripping /)
  * shell -- necessary?
  * function Local variables!
  * rebase-ref: extract & use the branch name
  * tsort: print the sum ref in full.
  * rebase-segment: correct the full-ref expansion.
  * comments & tracing & refomattig shell variable assignment
  * rename addend .. silently
  * set_symbolic_reference silent
  * rename: point all sym-refs at the renamed branch.
  * Test all steps

 -- Michal Maruska <mmaruska@gmail.com>  Sun, 18 Nov 2012 15:30:52 +0100

git-hierarchy (1.9) release; urgency=low

  * When describing segment, show the commits too.
  * Implement deleting a Sum.
  * is_sum function
  * is_segment function
  * segment_base function
  * list segments by Git call (not filename globbing).
  * new: git-dump-poset to dump a partial graph.
  * git-tsort: don't mix the output with log messages

 -- Michal Maruska <mmaruska@gmail.com>  Tue, 13 Nov 2012 08:56:03 +0100

git-hierarchy (1.8) release; urgency=low

  * git-branch-exists: new global function
  * stop using my (git) abbrevs.
  * drop the (git) tools non-related to "hierarchy"
  * Start some documentation.
  * Delete segments correctly -- Broken
  * Removing Symbolic refs by removing files.
  * Don't list both the bases & starts of segments.
  * Make a test tool.
  * Fix: don't ignore the failure of "git rebase"!

 -- Michal Maruska <mmaruska@gmail.com>  Mon, 12 Nov 2012 02:07:58 +0100

git-hierarchy (1.7) release; urgency=low

  * Segment: finally a way to produce the commit HASH (of Start).
  * Fix describe segment.

 -- Michal Maruska <mmaruska@gmail.com>  Fri, 09 Nov 2012 10:33:21 +0100

git-hierarchy (1.6) release; urgency=low

  * show progress during poset rebasing.
  * git-segment:  symbolic references: test & create them correctly.

 -- Michal Maruska <mmaruska@gmail.com>  Fri, 09 Nov 2012 09:57:14 +0100

git-hierarchy (1.5) release; urgency=low

  * tsort: handle 0 sums/segments in a friendly way.
  * improve Usage info of git-sum.
  * git-sum: create the branche immediately
  * Accept the sha hash as segment "start".
  * fix usage string.
  * git-segment:  implement dropping
  * git-segment  document all the possible Usages.
  * git-sum: document all Usages

  [ Handling symbolic references correctly ]
  * Testing existence
  * git-segment:  don't hurry to files
  * Correctly removing the Symbolic references
  * Use for-each-ref  to check ALL (even packed) references.
  * describe: try to use -- incomplete!
  * after rebasing, update the Symbolic refs correctly.
  * Usage/help for  git-delete

 -- Michal Maruska <mmaruska@gmail.com>  Tue, 06 Nov 2012 15:58:53 +0100

git-hierarchy (1.4) release; urgency=low

  * stop tracing the scripts.
  * Fix git-segment (to not force creating the segment branch).
  * comments & style
  * Bugfix: Zsh can somehow break out of if then ..... fi.  Prevent that.

 -- Michal Maruska <mmaruska@gmail.com>  Thu, 01 Nov 2012 11:37:34 +0100

git-hierarchy (1.3) release; urgency=low

  * When creating the segment branch, start @ the start!
  * rename to git-sum
  * git_top() returns the .git dir.
  * sum: list sums as well.
  * use SUM_DIR to hide the detail. + more GIT_DIR.
  * sumdir in tsort
  * tsort: possibly output the graph (vertices in the top. order)
  * rebase-poset: report the sum/segment which failed during rebase.

 -- Michal Maruska <mmaruska@gmail.com>  Tue, 30 Oct 2012 11:08:53 +0100

git-hierarchy (1.2) release; urgency=low

  * fix  (create the Branch for segment)
  * Common functions in $prefix/share/git-hierarchy/functions.sh
  * Option to show all segments.

 -- Michal Maruska <mmaruska@gmail.com>  Mon, 15 Oct 2012 22:13:46 +0200

git-hierarchy (1.1) release; urgency=low

  * fix debian Conflict
  * don't use (git) abbrevs
  * New, top level (rebasing) tool
  * Fix once again  mktemp --tmpdir
  * optionally keep Graph temp file
  * allow basing on remote heads

 -- Michal Maruska <mmaruska@gmail.com>  Sun, 14 Oct 2012 02:44:23 +0200

git-hierarchy (1.0) release; urgency=low

  * Initial import (from mmc-shell)

 -- Michal Maruska <mmaruska@gmail.com>  Fri, 12 Oct 2012 02:02:04 +0200
