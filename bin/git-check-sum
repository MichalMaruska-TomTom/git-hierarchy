#! /usr/bin/zsh -feu

# This is reimplemted in git-sum-branches!

# check that commit0 is a sum of commit1 ... commitN


commit0=$1
# commits=$~

# Resolve commit0 into sha
sha0=$(git log $commit0 --max-count=1 --format="%H")
# sort the others


# These files will contain the SHA1 of commit1 ... commitN
# and of the parents of commit0.
temp1=""
temp2=""

clean()
{
    rm -f $temp1 $temp2
}

trap "echo error; clean" ERR
trap "clean" EXIT

temp1=$(mktemp )
temp2=$(mktemp )


# 2 arrays are the same?
# sort & compare.
git cat-file commit $sha0 | awk '/^parent/ {print $2}'| sort > $temp1
# echo $parents


typeset -a summands
summands=($(git-sum $1))

# echo "summands $summands"
(foreach s ($summands) {git log $s --max-count=1 --format="%H"}) |\
 sort > $temp2


# XOR:
comm -3 $temp1 $temp2
