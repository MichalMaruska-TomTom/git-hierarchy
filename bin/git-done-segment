#!/bin/zsh -feu

source /usr/share/git-hierarchy/functions.sh
GIT_DIR=$(git_dir)


readonly TEMP="temp"

while getopts :ha OPT; do
    case $OPT in
        h|+h)

            ;;
        a|+a)
            # abort
            ;;
        *)
            print "usage: ${0##*/} [+-ha] [--] ARGS..."
            exit 2
    esac
done
shift OPTIND-1
OPTIND=1

if [ $# -gt 0 ]; then
    readonly branch=$1
else
    readonly branch=$(marked_segment)
fi

if [ -z $branch ];
then
    echo "no marked segment" >&2
    exit 0
fi

git branch --force $branch $TEMP
git checkout $branch

# This is also the content of the rebase-complete hook!
# although there we need to recover the "state", so `git-reset-segment'
# and clean it after.
#    git-segment --restart $branch $onto
git-reset-segment $branch
git branch --delete $TEMP
