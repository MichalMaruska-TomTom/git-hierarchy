#! /usr/bin/zsh -feu


# Tools can operate in 2 modes: `set' mode, in which ALL segments & sums are collected,
# and t-sorted by _local_ property of incidence.
#
# or the `graph' mode, in which some root(s) is given, and we walk down and get a restricted
# set of segments/sums.
#
# DISPlay etc should be separate. These 2 methods should feed a commot format of data.


# apparently I use 2 formats:  `dot' and `tsort'


# old: This is .... unmaintained.... the display part is left behind git-tsort -x.

# fixme: this does not dump the TYPE of the relationship. (sum vs segment-base)
source /usr/share/git-hierarchy/functions.sh
GIT_DIR=$(git_dir)

# segment_base ${segment#refs/base/}

usage()
{
    cat <<EOF
usage: ${0##*/} [+-dghxr] [--] {root-ref}

Output or Display the order of segments & sums below REF
-x  display the graph w/ ImageMagick
-g  dump the graph
-r  raw format
-d  turn on Debugging
-h  help
EOF
}

# sum_bases()
display_gui=n
dump_format=tsort
extern_color=pink
DEBUG=n
typeset -a draw_options


while getopts :dghxr OPT; do
    case $OPT in
	x|+x)
	    display_gui=y
	    dump_format=dot
	    ;;
	g|+g)
	    dump_format=tsort
	    ;;
	r|+r)
	    dump_format=raw
	    ;;
	h|+h)
	    usage
	    exit 0
	    ;;
	d)
	    DEBUG=y
	    ;;
	*)
	    usage
	    exit 2
    esac
done
shift OPTIND-1
OPTIND=1

if [ $# != 1 ]; then
    usage
    exit 1
fi


root=$(git-expand-ref $1)

GRAPH=

trap "clean" EXIT
clean()
{
    test -n "$GRAPH" && rm -f $GRAPH
}

GRAPH=$(mktemp --tmpdir=${TEMP-/run/tmp/} graph.XXX)

# DFS:
typeset -a queue
queue=($root)
typeset -a processed
while [[ ${#queue} -ge 1  ]];
do

    this=${queue[1]}
    # remove "first" if it's repeated:
    # we don't need += here, since all previously processed cannot be in `queue' anymore,
    # if the graph is DAG (acyclic!):
    processed=($this)
    queue=(${queue:|processed})

    test "$DEBUG" = y && \
	cecho yellow "processing $this, remain $queue ${#queue}" >&2 || : ok

    # append the base(s), or summands:
    name=${this#refs/heads/}
    if is_sum $name; then
	# note these functions need the variables: dump_format etc.
	dump_sum $name
	queue+=($(summands_of $name))
    elif is_segment $name; then
	dump_segment $name
	queue+=($(segment_base $name))
    else
	if test "$DEBUG" = y; then
	    cecho red "stopping @ $name" >&2
	fi
	if [ $dump_format = raw ]; then
	    echo "base: $name"
	fi
    fi

    if test "$DEBUG" = y; then
	cecho green "iterate $queue -- ${#queue}" >&2
    fi
done  > $GRAPH


# cat $GRAPH

# same as git-tsort:
case $dump_format in
    dot)
	draw-tsort-graph $draw_options -F png $GRAPH | display -
	;;
    raw)
	cat $GRAPH
	;;
    tsort)
	tsort $GRAPH | tac
	;;
    *)
	for  a in $(tsort $GRAPH)
	do
	    cecho green $a
	    grep -e "^$a" $GRAPH || :
	done

esac
