#!/bin/zsh -f

DIFF_SEGMENT="git-diff-segments"

# Given 2 dumps, make clear the difference.
# Exit with 0 status if the are the same.
usage()
{
    cat <<EOF
usage: $0 [-v] dump1 dump2

-v verbose
files generated by 'git-dump-refs'
EOF
}

verbose=n
while getopts :vh OPT; do
    case $OPT in
        v|+v)
            verbose=y
            ;;
        h|+h)
            usage
            exit 0
            ;;
        *)
            usage >&2
            exit 2
    esac
done
shift OPTIND-1
OPTIND=1

if [[ $# != 2 ]]; then
    usage
fi

deduce_dump()
{
    local path=$1
    if [[ -d $path ]]; then
        path=$path/hierarchy.dump
    fi
    echo $path
}


dump1=$(deduce_dump $1)
dump2=$(deduce_dump $2)

GREP=/bin/grep

segment_rx='^segment:'
sum_rx='^sum:'

collect_status=0

STEP()
{
    cecho blue $@
}

STEP "diff the segment sets"
if ! diff <($GREP $segment_rx $dump1 |sort ) <($GREP $segment_rx $dump2 |sort)
then
    collect_status=1
fi

STEP "diff the sum sets"
if ! diff <($GREP $sum_rx $dump1 |sort ) <($GREP $sum_rx $dump2 |sort )
then
    collect_status=1
fi

SUM_AWK=/usr/share/git-hierarchy/dump-sum

STEP "diff the sum definitions!"

foreach sum ( $(sed --silent -e 's|sum: refs/heads/||g;T;p' $dump1 ))
{
    cecho yellow $sum
    (if [[ $verbose = y ]]; then set -x;fi
     comm -3 <(gawk -v requested="refs/heads/$sum" -f $SUM_AWK $dump1 |sort) \
          <(gawk -v requested="refs/heads/$sum" -f $SUM_AWK $dump2|sort)
     )
}

STEP "now diff single segments"
if [[ $verbose = y ]]; then set -x;fi

# - grep segment hierarchy.dump| sed --silent -e 's|segment: refs/heads/||g;p'
# sed -n  -e '\|segment: refs/heads/|p' hierarchy.dump
# sed --silent -e 's|segment: refs/heads/||g;tp'
# - grep segment $dump1 |sort
foreach segment ( $(sed --silent -e 's|segment: refs/heads/||g;T;p' $dump1 ) )
{
    #: ${segment=${segment#refs/heads/}}
    cecho yellow $segment;
    # todo: collect the status
    if ! $DIFF_SEGMENT $segment $dump1 $dump2
    then
        collect_status=1
    fi
}


exit $collect_status
