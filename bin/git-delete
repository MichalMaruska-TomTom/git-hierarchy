#! /usr/bin/zsh -fue

usage()
{
    cat <<EOF
Usage: ${0##*/} [+-h] [-s] [--] ARGS...

Delete a branch, and any mention of it  -- symbolic references.
-s  ... first check & abort if it's a summand.
-D  ... option to delete the branch. (git branch -D vs -d)
-r  ... use the base to rebase upon.
EOF
}

source /usr/share/git-hierarchy/functions.sh

GIT_DIR=$(git_dir)
delete_from_sum=yes
rebase_segments=no

git_branch_delete_option="-d"

while getopts :Dhrs OPT; do
    case $OPT in
        h|+h)
            usage
            exit 0
            ;;
        s)
            delete_from_sum=no
            ;;
        r)
            rebase_segments=yes
            ;;
        D)
            git_branch_delete_option="-D"
            ;;
        *)
            exit 2
    esac
done
shift OPTIND-1
OPTIND=1


delete_one()
{
    victim=$1
    victim_full=$(git-expand-ref $victim)
    victim=${victim#/ref/heads/}


### detect that nothing depends on it.
## Sums
    foreach ref ($(git for-each-ref "refs/sums/*/*" --format "%(refname)"))
    {
        if [ "$(dump_ref_without_ref $ref)" = "$victim_full" ]; then
            sum=${ref#refs/sums/}
            sum=${sum%/*}
            cecho red "Sum $sum depends on it"
            if [ $delete_from_sum = yes ];then
                echo "hence removing automatically from it."
                git-sum $sum "-$victim"
            else
                die "it's a summand of $sum -> not deleting!"
                exit -1
            fi
        fi
    }

    if [[ $rebase_segments = yes ]] && is_segment $victim; then
       the_base=$(segment_base $victim)
    fi

## Check dependency: segment bases & other refs?
    foreach ref ($(git for-each-ref --format="%(refname)" \
        'refs/base/*'))
    {
        if [ "$(dump_ref_without_ref $ref)" = "$victim_full" ]; then
            segment=${ref#refs/base/}
            cecho red "it's a base for $segment"
            if [[ $rebase_segments = yes ]]; then
                git-segment -u $segment $the_base
            else
                exit -1
            fi
        fi
    }


# is it a sum itself?
    if is_sum $victim ; then
        cecho yellow "it's a sum"
        delete_sum_definition $victim
    fi

# A segment?
    if is_segment $victim; then
        cecho yellow "$victim is a segment -> dropping segment references"
        drop_segment $victim
    fi


    git branch $git_branch_delete_option $victim
}


for victim in "$@";
do
    delete_one $victim;
done
