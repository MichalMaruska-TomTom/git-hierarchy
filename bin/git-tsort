#! /usr/bin/zsh -feu

# Generate list of my known branches (sums & segments)
# and output them in topological order.

source /usr/share/git-hierarchy/functions.sh
GIT_DIR=$(git_dir)
SUM_DIR=$GIT_DIR/mmc

keep_graph="n"

while getopts :k OPT; do
    case $OPT in
	k|+k)
	    keep_graph=y
	    ;;
	*)
	    print "usage: ${0##*/} [+-k} [--] ARGS..."
	    exit 2
    esac
done
shift OPTIND-1
OPTIND=1

# Get a temp file:
# generate
GRAPH=$(mktemp --tmpdir=${TEMP-/run/tmp/}  graph.XXX)

segment_base()
{
#    $1
#
    cat $1 | sed -e 's^ref: refs/\(heads\|remotes\)/^^'
#    basename $segment
}



# segments ... look at bases.
foreach segment ($GIT_DIR/refs/base/*);
{
    echo -n $(basename $segment) " "
    segment_base $segment
}   > $GRAPH

# sums
foreach sum ($SUM_DIR/*(.))
{
    name=$(basename $sum)
    (while read a; do
	echo $name $a
    done ) < $sum;
} >> $GRAPH


# sort.


# tsort
tsort $GRAPH | tac
if [ $keep_graph != y ]; then
    rm -f $GRAPH
fi

