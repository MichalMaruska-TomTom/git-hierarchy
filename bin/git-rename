#! /usr/bin/zsh -fue

from=$1
new=$2

source /usr/share/git-hierarchy/functions.sh
GIT_DIR=$(git_dir)

# this renames only branches!

full_from=$(git-expand-ref $from)
full_new=$(git-expand-ref $new)

from=${full_from#refs/heads/}
new=${full_new#refs/heads/}

# fixme: verify that it's a branch name.

# quoted_regexp.

# replace....
echo renaming $from to $new

git branch -m $from $new
# todo: trap


rename_symbolic_reference()
{
    ref=$1
    new_name=$2
    # git symbolic-ref -m "renaming Sum"

    # rename: create & drop?
    content=$(dump_ref $ref)
    # fixme: if hash don't prepend "ref:" !!!

    set_symbolic_reference $new_name $content
    git update-ref --no-deref  -d $ref
}



# rename sum:
if is_sum $from; then
    # rename ALL refs
    git for-each-ref "refs/sums/$from/" --format "%(refname)"|\
    while read summand; do
	index=${summand##*/}
	rename_symbolic_reference $summand "refs/sums/$new/$index"
    done
fi


# as an addend:
git for-each-ref "refs/sums/" --format "%(refname)"|\
while read summand; do
    if dump_ref $summand|\
       grep --line-regexp --fixed-strings "ref: $full_from" >/dev/null
    then
	git symbolic-ref  $summand $full_new
	# git update-ref --no-deref  -d $summand $full_new
    fi
done


# segment base/start refs.

# rename segment:
if is_segment $from; then
    rename_symbolic_reference refs/base/$from refs/base/$new
    rename_symbolic_reference refs/start/$from refs/start/$new
fi


exit
# fixme: not remotes!
QUOTED_REGEXP=$from
# other bases pointing at this branch.

setopt extendedglob
foreach ref ($GIT_DIR/refs/^remotes/**/*(.))
{
    sed -i -e "s|ref: refs/heads/$QUOTED_REGEXP|ref: refs/heads/$new|g" $ref
}


