#! /usr/bin/zsh -fue
# Rename a branch: keeps the support refs (base, start, summands) in sync.
# todo: trap & rename back if failure in-flight?

usage()
{
    print "usage: ${0##*/} [+-h} [--] {from} {new-name}"
    # this renames only branches!
}

while getopts :h OPT; do
    case $OPT in
        h|+h)
            usage
            exit 0
            ;;
        *)
            usage >&2
            exit 2
    esac
done
shift OPTIND-1
OPTIND=1

if [ ! $# = 2 ];
then
    usage
    exit 1
fi

source /usr/share/git-hierarchy/functions.sh
readonly GIT_DIR=$(git_dir)

# set -x

# Extract the segment/branch name:
full_from=$(git-expand-ref $1)
from=${full_from#refs/heads/}
# The new one probably does not exist, so I cannot use $(git-expand-ref $2)

new=$2
new=${new#refs/heads/}
# fixme: verify that it's a valid branch name.

# quoted_regexp.

# replace....
INFO "renaming $from to $new"

# no native implementation?
rename_symbolic_reference()
{
    # the same content for a renamed ref.
    local ref=$1
    local new_name=$2
    # git symbolic-ref -m "renaming Sum"

    # rename: create & drop?
    local content=$(dump_symbolic_ref $ref)
    # fixme: if hash don't prepend "ref:" !!!
    INFO "content $content"
    set_symbolic_reference $new_name "$content"
    drop_symbolic_ref $ref
}

# a non-symbolic reference -- native implementation:
rename_reference()
{
    local ref=$1
    local new_name=$2
    # git symbolic-ref -m "renaming Sum"

    # rename: create & drop?
    content=$(dump_ref $ref)
    # fixme: if hash don't prepend "ref:" !!!

    git update-ref $new_name $content
    drop_symbolic_ref $ref
}



# rename sum:
if is_sum $from; then
    # rename ALL refs
    git for-each-ref "refs/sums/$from/" --format "%(refname)"|\
    while read summand; do
        index=${summand##*/}
        # I know they are all symbolic:
        rename_symbolic_reference $summand "refs/sums/$new/$index"
    done
fi

if is_segment $from; then
    # segment base/start refs.
    rename_symbolic_reference refs/base/$from refs/base/$new
    rename_reference refs/start/$from refs/start/$new
fi


# Here Git can fail, so we fallback to:
readonly full_new=$(git-expand-ref $new || echo "refs/heads/$new")

# As the DESTINATION of a symref.
git for-each-ref "refs/sums/" "refs/base/" --format "%(refname)"|\
while read symref; do
    if dump_symbolic_ref $symref|\
       grep --line-regexp --fixed-strings "$full_from" >/dev/null
    then
        INFO "replacing symbolic ref $symref to reference $full_new"
        set_symbolic_reference $symref "ref: $full_new"
    fi
done

# If this is done before "git for-each-ref" then the broken ones are skipped!
# with its reflog!
git branch --move $from $new


exit
# fixme: not remotes!
QUOTED_REGEXP=$from
# other bases pointing at this branch.

setopt extendedglob
foreach ref ($GIT_DIR/refs/^remotes/**/*(.))
{
    sed -i -e "s|ref: refs/heads/$QUOTED_REGEXP|ref: refs/heads/$new|g" $ref
}
