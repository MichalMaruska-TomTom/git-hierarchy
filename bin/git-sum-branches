#! /usr/bin/zsh -feu

usage()
{
    cat <<EOF
Remake a git sum-merge.

usage: ${0##*/} [-d] [+-r] [-h] [--] ARGS...
-d  dry
-r  reset (before starting merge)
-h  help
EOF
}

source /usr/share/git-hierarchy/functions.sh
GIT_DIR=$(git_dir)

# fixme:
set +u
. /usr/lib/git-core/git-sh-setup
set -u
# require_clean_work_tree "merge" "$(gettext "Please commit or stash them.")"


# by default make a `clean' merge. This means
reset=y
dry=n

while getopts :rdh OPT; do
    case $OPT in
	d)
	    dry=y;;
	r)
	    # reset:
	    reset=y
	    ;;
	+r)
	    reset=n
	    ;;
	h)
	    usage
	    exit
	    ;;
	*)
	    usage
	    exit 2
    esac
done
shift OPTIND-1
OPTIND=1

if [ $dry = "y" ]; then
    cmd="cecho red"
else
    cmd=""
fi

sum_branch=$1



#### Here we start:
typeset -a summand_branches

# get the list of summands:

summand_branches=(
    $(git for-each-ref "refs/sums/$sum_branch/" --format "%(refname)") )
#(${(f)_tmp})
# echo $summand_branches

# try to resolve them ourselves:
typeset -a real_branches
real_branches=()

#foreach br ($summand_branches) {real_branches+=$(dump_ref $br)}
foreach br ($summand_branches) {
    # local
    name=$(dump_ref_without_ref $br)
    name=${name#refs/heads/}
    real_branches+=$name
    }
cecho blue "Summands: $real_branches"

git-branch-exists $sum_branch || git branch $sum_branch


# if exists such branch/tag ->abort
first=$real_branches[1]

others=($real_branches[2,-1])

if [ $reset = "y" ]; then
    #eval $cmd git checkout $sum_branch
    eval $cmd git checkout $first
    eval $cmd git branch -f $sum_branch $first
    eval $cmd git checkout $sum_branch
    # eval $cmd git reset --hard $first --
else
    eval $cmd git checkout $sum_branch
    eval $cmd git merge $first;
fi
# git checkout -b $sum_branch $first

# octopus is default (for >2 children) & refuses any conflict.

set -x
git merge -m "Sum: $sum_branch = $others + $first" \
    --rerere-autoupdate \
    -s octopus \
    -s recursive -X patience -X ignore-space-change $others


# foreach next ($others)
# {
#     eval $cmd git merge -m "'Sum: $next into $sum_branch'" --rerere-autoupdate $next;
# }

