#! /usr/bin/zsh -feu

# outputs duplicates. -- fixed in `git-walk-down'

# usage $0 <reference>
#   reference is either sum or segment.
usage()
{
    cat<<EOF
usage: ${0##*/} [+-h} [--] ARGS...
EOF
}


source /usr/share/git-hierarchy/functions.sh
GIT_DIR=$(git_dir)

# recursively dump the poset:
dump_poset()
{
    local base=$1
    local nodes
    typeset -a nodes
    nodes=( $base )

    while [[ ${#nodes} -gt 0 ]]
    do

	# report:
	local first=$nodes[1];
	shift nodes
	cecho green $first

	# recurse:
	# segment -> base.
	# limit base -> stop.
	name=${first#refs/heads/}
	if is_segment $name; then
	    # one could filter those already in.
	    nodes+=( "$(segment_base $name)" )
	elif is_sum $name; then
	    # one could filter those already in.
	    nodes+=( $(summands_of $name) )
	else
	    : do_nothing #break
	fi
    done
}



while getopts :h OPT; do
    case $OPT in
	h|+h)
	    usage
	    exit
	    ;;
	*)
	    usage
	    exit 2
    esac
done
shift OPTIND-1
OPTIND=1
dump_poset $(git-expand-ref $1)
