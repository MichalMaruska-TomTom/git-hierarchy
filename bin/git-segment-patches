#!/bin/zsh -feu

# export a segment as patches, into separate subdirectory

# set -x

source /usr/share/git-hierarchy/functions.sh
GIT_DIR=$(git_dir)

usage()
{
    cat <<EOF
usage: ${0##*/} [-p] [+-h] [-o outdir] [--] {segment}  args...

-q  ... quiet
-p  ... dump the patch-ids.
args are passed to:  git-format-patch(1)
EOF
}


output_dir=""
dump_ids="n"
arguments=()
while getopts :ho:pq OPT; do
    case $OPT in
        h|+h)
            usage
            exit 0
            ;;
        p)
            dump_ids="y"
            ;;
        q)
            arguments+=(--quiet)
            ;;
        o)
            output_dir=$OPTARG
            ;;
        *)
            echo "unexpected option $OPT">&2
            usage>&2
            exit 2
    esac
done
shift OPTIND-1
OPTIND=1


if [ $# -lt 1 ]; then
    echo "missing arguments">&2
    usage>&2
    exit 2
fi

# dump segment:
segment=$1; shift

name=${segment#refs/heads/}
start=$(segment_start $name)

if [ $dump_ids = "y" ]; then
    foreach commit ($(git rev-list  $start..$segment)) {
        git show $commit| git patch-id
    }
else
    if [ -z "$output_dir" ]
    then
        # this can fail!
        output_dir=$name
        mkdir -v $output_dir
    else
        mkdir -p $output_dir
    fi

    git format-patch $arguments --keep-subject --inline --output-directory $output_dir $start..$segment "$@"
fi
