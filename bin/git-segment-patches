#!/bin/zsh -feu

# export a segment as patches, into separate subdirectory

set -x

source /usr/share/git-hierarchy/functions.sh
GIT_DIR=$(git_dir)

usage()
{
    cat <<EOF
usage: ${0##*/} [-p] [+-h] [-o outdir] [--] {segment}  args...

-p  ... dump the patch-ids.
args are passed to:  git-format-patch(1)
EOF
}


output_dir=""
dump_ids="n"
while getopts :ho:p OPT; do
    case $OPT in
        h|+h)
            usage
            exit 0
            ;;
        p)
            dump_ids="y"
            ;;
        o)
            output_dir=$OPTARG
            ;;
        *)
            usage
            exit 2
    esac
done
shift OPTIND-1
OPTIND=1


if [ $# -lt 1 ]; then
    usage
    exit 2
fi

# dump segment:
segment=$1; shift
if [ -z "$output_dir" ]
then
    output_dir=$segment
fi
mkdir -p $output_dir

name=${segment#refs/heads/}
start=$(segment_start $name)

if [ $dump_ids = "y" ]; then
    foreach commit ($(git rev-list  $start..$segment)) {
        git show $commit| git patch-id
    }
else
    git format-patch --keep-subject --output-directory $output_dir $start..$segment "$@"
fi

# dump sums:



# foreach segment ($(git-tsort)) {~/repo/git-hierarchy/bin/git-segment-patches $segment Components/NavKit}


# foreach segment (refs/heads/new-base  refs/heads/fts refs/heads/tools refs/heads/start refs/heads/navkit-cxx11 refs/heads/tests refs/heads/benchmarks refs/heads/svg refs/heads/telemetry  refs/heads/skia refs/heads/good  refs/heads/wip refs/heads/study refs/heads/skia-investigation refs/heads/skia-fat refs/heads/new refs/heads/navkit-sign-compare refs/heads/ct-devenv refs/heads/benchmarks-verbose ) {~/repo/git-hierarchy/bin/git-segment-patches $segment Components/NavKit}
