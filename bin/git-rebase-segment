#! /usr/bin/zsh -feu


source /usr/share/git-hierarchy/functions.sh
GIT_DIR=$(git_dir)


usage()
{
    print "usage: ${0##*/} [--] ARGS..."
}

while getopts :h OPT; do
    case $OPT in
	h)
	    usage
	    exit 0
	    ;;
	*)
	    print "usage: ${0##*/} [--] ARGS..."
	    exit 2
    esac
done
shift OPTIND-1
OPTIND=1


# maybe canonize?
branch=$1

# not needed "ref/
start="refs/start/$branch"
base="refs/base/$branch"

# This might fail. in that case:
# 1/ save the state, to reinvoke later:
if git rebase --onto $base $start $branch;
then
    # todo: git-segment $branch $base
    git-set-start $branch $base
else
    echo "$branch" > $GIT_DIR/.rebasing-segment
    cecho red "** ERROR: Rebase failed."
    echo "Finish the rebase manually (resolve conflicts, and git rebase --continue or --skip"
    cecho green "then run:   git-reset-segment $branch"

    exit 1
fi

