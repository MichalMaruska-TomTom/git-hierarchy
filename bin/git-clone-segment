#!/bin/zsh -euf

source /usr/share/git-hierarchy/functions.sh
GIT_DIR=$(git_dir)

usage()
{
    setopt POSIX_ARGZERO
    cat <<EOF
usage: ${0##*/} [+-h] [--] {original} {clone-name} {new-base}

original ... an existing segment
clone-name ... non-existing ref name.
new-base ... existing commit-id/ref/tag.

****
Create a new git-segment, which contains the same sequence of
patches as a given one, starting off a new-base.


EOF
    unsetopt POSIX_ARGZERO
}

while getopts :h OPT; do
    case $OPT in
        h|+h)
            usage
            exit 0
            ;;
        *)
            echo "unexpected option $OPT">&2
            usage >&2
            exit 2
            ;;
    esac
done
shift OPTIND-1
OPTIND=1

if [ $# != 3 ]; then
    echo "missing parameters" >&2
    usage >&2
    exit 2
fi

# re-create the same segment
original=$1
new=$2
new_base=$3


# Just clone it, and rebase it:
# alternatively create it, and then "git branch -f new orig"
# but this way it might error if already existing, which is good.
git-segment $new $new_base $(segment_start $original) $original

# rebase it at a different point:
git-rebase-segment $new
