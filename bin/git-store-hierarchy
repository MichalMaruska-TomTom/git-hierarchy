#!/bin/zsh -feu

source /usr/share/mmc-shell/git-functions.sh

#
readonly BRANCH="_hierarchy"
readonly FILENAME=hierarchy
readonly MODE=100644

usage()
{
    cat <<EOF
usage: ${0##*/} [+-h] [--] ARGS...

********
Invoke "git-graph -s" and store the output ...
in a new commit on $BRANCH
EOF
}

while getopts :h OPT; do
    case $OPT in
        h|+h)
            usage
            exit 0
            ;;
        *)
            echo "unexpected option $OPT">&2
            usage >&2
            exit 2
    esac
done
shift OPTIND-1
OPTIND=1

# create the content:
# ==================
# git-graph -s > $tmpfile
readonly blob_hash=$(git-graph -s | git hash-object --stdin -w)
# check it didn't fail.

# check:
git cat-file -p $blob_hash
# must be "blob"
git cat-file -t $blob_hash


# tree with 1 file:
readonly tree_hash=$(echo "$MODE blob $blob_hash\t$FILENAME"| git mktree)
# |git update-index  --index-info

# the parent:
parents=()

if git-branch-exists $BRANCH;
then
    parents+=(-p $BRANCH)
fi
commit=$(git commit-tree -m "new hierarchy" $parents $tree_hash)


git branch --force $BRANCH $commit
