#!/bin/zsh -feu

GIT_P4=~/git/git-core/git-p4.py

source /usr/share/git-hierarchy/functions.sh
GIT_DIR=$(git_dir)
cd "$(git rev-parse --show-toplevel)"


# I could even 'git fetch'
usage()
{
    cat <<EOF
usage: ${0##*/} [+-hfv] [--] [top-ref]
-f  do NOT git fetch origin
-v  verbose
-d  dry
[top-ref]  what to rebase, by default the current branch.

*******
Discover which remote branches to fetch, then rebase ....
update the Bases by \`fetch' and rebase.
EOF

}

# debug=n
fetch=yes
dry_only=no

# if only debian/changelog -> stash
while getopts :hi:fvd OPT; do
    case $OPT in
        h|+h)
            usage
            exit 0
            ;;
        d)
            dry_only=yes
            ;;
        i)
            known_divergent+=($OPTARG)
            ;;
        f)
            fetch=no
            ;;
        v)
            debug=y
            ;;
        *)
            echo "unexpected option $OPT">&2
            usage>&2
            exit 2
    esac
done
shift $(( OPTIND - 1 ))
OPTIND=1
# set -x
if [ $# -lt 1 ]; then
    # by default the current-branch-poset
    # by default look at the base ... what it follows:
    top=$(current_branch_name)
    cecho blue -n "taking the current "; cecho green -n "$top "; cecho blue "as top"
elif [ $# = 1 ]; then
    top=$1
else
    die "wrong number of parameters"
fi

# todo: git-walk-down and solve the baseS. move them,
typeset -a bases
#todo: have to
git checkout HEAD

# note: grep & drop = sed -n

if [[ ${#known_divergent} -gt 0 ]]
then
    ignore_options=("-i")
    ignore_options=(${ignore_options:^^known_divergent})
else
    ignore_options=()
fi

bases=($(git-walk-down $ignore_options -r $top|- grep segment| cut -f 3))
if [[ $? != 0 ]]
then
    die "cannot continue -- git-walk-down failed"
fi

DEBUG "bases: $bases"
# walk (back) up, and fetch/fast-forward.
foreach base ($bases)
{
    fetch_upstream_of $base
}

if [ $dry_only = no ]; then
    #local
    poset_options=()
    poset_options+=($ignore_options )

    if [[ $debug = y ]]; then
        poset_options+=(--debug)
    fi

    if [[ $debug = y ]]; then set -x;fi
    git-rebase-poset $poset_options $top
fi
