#!/bin/zsh -feu

# I could even 'git fetch'
usage()
{
    cat <<EOF
usage: ${0##*/} [+-hfv] [--] {top-ref} [remote or base]
-f  do NOT git fetch origin
-v  verbose
EOF
}

DEBUG=n
fetch=yes
remote=origin

# if only debian/changelog -> stash
while getopts :hfvo: OPT; do
    case $OPT in
	h|+h)
	    usage
	    exit 0
	    ;;
	f)
	    fetch=no
	    ;;
	v)
	    DEBUG=y
	    ;;
	o)
	    remote=$OPTARG
	    ;;
	*)
	    usage
	    exit 2
    esac
done
shift $(( OPTIND - 1 ))
OPTIND=1

if [ $# -lt 1 ]; then
    echo "error: missing parameters" >&2
    usage; exit 2
fi
top=$1

if [ $fetch = yes ]; then
    if [ $DEBUG = y ]; then echo "fetching from $remote">&2;fi
    git fetch $remote
fi




# todo: git-walk-down and solve the baseS. move them,
typeset -a bases
#todo: have to
git checkout HEAD

bases=($(git-walk-down -r $top|sed -n -e '/^base:\(.*\)$/{s/^base: //;P}'))
foreach base ($bases)
{
    [ $DEBUG = y ] && echo "merging upstream to $base" >&2
    remote=$(git for-each-ref --format='%(upstream:short)' refs/heads/$base)
    git branch -f $base $remote

}
#$2
# origin/$base
git-rebase-poset $top

