#!/bin/zsh -feu

# to be invoked with correct cwd! ... below $TOP

# based on ../bin/git-segment-patches

# port changes between Git repos, which don't share commits.
# so by patches!

usage()
{
cat <<EOF
usage: ${0##*/} [+-h] [-n] [-b base] [--] {source} {segment-name} {dest}

-n ... don't re-define the segment
-b base  ... by default the same name is used.

source ... the git-repository which contains:
segment-name ... the name
dest  .... the destination git-repository
EOF
}

CREATE_SEGMENT=y
while getopts :hb:n OPT; do
    case $OPT in
        h|+h)
            usage
            exit 0
            ;;
        n)
            CREATE_SEGMENT=no
            ;;
        b)
            SEGMENT_BASE="$OPTARG"
            # shift
            ;;
        *)
            usage >&2
            exit 2
    esac
done
shift OPTIND-1
OPTIND=1

if [ $# -lt 2 ]; then
   usage
fi

SOURCE_DIR=$(realpath $1)
SEGMENT_NAME=$2
# see below for $3


tempdir=$(mktemp --directory ${TMP-/tmp}/$SEGMENT_NAME-XXX)

: ${remote_dir::=$SOURCE_DIR}
(
    cd $remote_dir
    git-segment-patches -o $tempdir $SEGMENT_NAME
)

# I could provide a directory instead!


if [ $# -gt 2 ]; then
    DESTDIR=$3
    cd $DESTDIR
fi


# create:
if [ $CREATE_SEGMENT = y ]; then
    git-segment --checkout $SEGMENT_NAME $SEGMENT_BASE
fi

apply_patches_from $tempdir

# fixme: trap
echo "now remove the patches in $tempdir"
