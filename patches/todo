

$ git rebase --continue  
run_specific_rebase_internal
Applying:  [DEV] Script to generate boot image. 
No changes - did you forget to use 'git add'?
If there is nothing left to stage, chances are that something else
already introduced the same changes; you might want to skip this patch.

When you have RESOLVED this problem, run "git rebase --continue".
If you prefer to skip this patch, run "git rebase --skip" instead.
To check out the original branch and stop rebasing, run "git rebase --abort".

rebase failed. State has been saved.
zsh: exit 1     git rebase --continue


michal@maruskadell:~/italia/vendor/tomtom/build 1$ st

rebase in progress; onto 8ac1d7f
You are currently rebasing branch 'gen-ramdisk' on '8ac1d7f'.
  (all conflicts fixed: run "git rebase --continue")

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        build.new/
        tools/create-ramdisk.

nothing added to commit but untracked files present (use "git add" to track)




fixme: first this was confusing:  ST detects no change! so I have no idea
what to  "solve".

michal@maruskadell:~/italia/vendor/tomtom/build 0$ git add tools/create-ramdisk


michal@maruskadell:~/italia/vendor/tomtom/build 0$ git rebase --continue    <2089 13:42:28 pts/38
run_specific_rebase_internal                                                                      Applying:  [DEV] Script to generate boot image.
Applying:  verbosity 
Using index info to reconstruct a base tree...
M       tools/create-ramdisk
Falling back to patching base and 3-way merge...
No changes -- Patch already applied.
calling finish_rebase to commit
finish_rebase

bug!   this should have reset the segment!

michal@maruskadell:~/italia/vendor/tomtom/build 0$ git-rebase-poset         <2090 13:42:34 pts/38
Must first finish rebasing segment  gen-ramdisk          
